"use strict";(self.webpackChunkflashbot_docs=self.webpackChunkflashbot_docs||[]).push([[3745],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),f=p(a),u=r,b=f["".concat(c,".").concat(u)]||f[u]||d[u]||s;return a?n.createElement(b,i(i({ref:t},l),{},{components:a})):n.createElement(b,i({ref:t},l))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<s;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},6067:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),i=["components"],o={title:"quick start"},c=void 0,p={unversionedId:"flashbots-data/mev-inspect-py/quick-start",id:"flashbots-data/mev-inspect-py/quick-start",isDocsHomePage:!1,title:"quick start",description:"Let's use mev-inspect to find the same arbitrage as MEV Alpha Leak",source:"@site/docs/flashbots-data/mev-inspect-py/quick-start.md",sourceDirName:"flashbots-data/mev-inspect-py",slug:"/flashbots-data/mev-inspect-py/quick-start",permalink:"/flashbots-data/mev-inspect-py/quick-start",tags:[],version:"current",frontMatter:{title:"quick start"},sidebar:"docs",previous:{title:"install",permalink:"/flashbots-data/mev-inspect-py/install"},next:{title:"inspecting",permalink:"/flashbots-data/mev-inspect-py/inspecting"}},l=[{value:"Install",id:"install",children:[]},{value:"Inspect a block",id:"inspect-a-block",children:[]},{value:"Connect to Postgres",id:"connect-to-postgres",children:[]},{value:"Query for arbitrage data",id:"query-for-arbitrage-data",children:[]},{value:"Query for arbitrage swaps",id:"query-for-arbitrage-swaps",children:[]},{value:"Query for miner payment",id:"query-for-miner-payment",children:[]},{value:"Next steps",id:"next-steps",children:[]}],d={toc:l};function f(e){var t=e.components,a=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Let's use mev-inspect to find the same arbitrage as ",(0,s.kt)("a",{parentName:"p",href:"https://twitter.com/mevalphaleak/status/1420416437575901185"},"MEV Alpha Leak")),(0,s.kt)("h3",{id:"install"},"Install"),(0,s.kt)("p",null,"Get mev-inspect running by going through the ",(0,s.kt)("a",{parentName:"p",href:"/flashbots-data/mev-inspect-py/install"},"install section")),(0,s.kt)("h3",{id:"inspect-a-block"},"Inspect a block"),(0,s.kt)("p",null,"Using the ",(0,s.kt)("a",{parentName:"p",href:"https://etherscan.io/tx/0xfcf4558f6432689ea57737fe63124a5ec39fd6ba6aaf198df13a825dd599bffc"},"linked etherscan transaction"),", we can see the block number is 12914944."),(0,s.kt)("p",null,"To inspect this block, run"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"./mev inspect 12914944\n")),(0,s.kt)("h3",{id:"connect-to-postgres"},"Connect to Postgres"),(0,s.kt)("p",null,"We'll connect to the Postgres database to see the data inspect found in that block"),(0,s.kt)("p",null,"Let's start up a client container connected to the DB:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"./mev db\n")),(0,s.kt)("p",null,"When you see the prompt"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"mev_inspect=#\n")),(0,s.kt)("p",null,"You're ready to query!"),(0,s.kt)("p",null,'To make the data display nice, switch into "Expanded display" mode by running'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\\x\n")),(0,s.kt)("h3",{id:"query-for-arbitrage-data"},"Query for arbitrage data"),(0,s.kt)("p",null,"Let's find that arbitrage by querying the ",(0,s.kt)("inlineCode",{parentName:"p"},"arbitrages")," table:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"SELECT *\nFROM arbitrages\nWHERE\n    block_number = 12914944 AND\n    transaction_hash = '0xfcf4558f6432689ea57737fe63124a5ec39fd6ba6aaf198df13a825dd599bffc'\n")),(0,s.kt)("p",null,"You should see output like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"id                   | ff2deb13-c2c1-4ef5-a6ff-0ca813a07d6b\ncreated_at           | 2021-09-27 15:26:58.193263\naccount_address      | 0x0000fee6275dab194ab538a01dd8b18b02b20000\nprofit_token_address | 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\nblock_number         | 12914944\ntransaction_hash     | 0xfcf4558f6432689ea57737fe63124a5ec39fd6ba6aaf198df13a825dd599bffc\nstart_amount         | 70287643212620210176\nend_amount           | 123848351154563483804\nprofit_amount        | 53560707941943273628\n")),(0,s.kt)("p",null,"We can see this matches the original tweet description!"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"profit_token_address")," is the address for WETH, our ",(0,s.kt)("inlineCode",{parentName:"p"},"start_amount")," is 70 WETH (assuming 18 decimals), and our ",(0,s.kt)("inlineCode",{parentName:"p"},"end_amount")," is 123 WETH"),(0,s.kt)("h3",{id:"query-for-arbitrage-swaps"},"Query for arbitrage swaps"),(0,s.kt)("p",null,"We can learn about the swaps involed in this arbitrage by joining against the ",(0,s.kt)("inlineCode",{parentName:"p"},"arbitrage_swaps")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"swaps")," tables"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Note: you'll need to switch in the id you got in the first query for arbitrage_id")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"SELECT s.*\nFROM swaps s\nJOIN arbitrage_swaps arb_swaps ON\n    s.transaction_hash = arb_swaps.swap_transaction_hash AND\n    s.trace_address = arb_swaps.swap_trace_address\nWHERE arb_swaps.arbitrage_id = 'ff2deb13-c2c1-4ef5-a6ff-0ca813a07d6b';\n")),(0,s.kt)("p",null,"You should see output like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"-[ RECORD 1 ]-----+-------------------------------------------------------------------\ncreated_at        | 2021-09-27 15:26:58.180131\nabi_name          | UniswapV3Pool\ntransaction_hash  | 0xfcf4558f6432689ea57737fe63124a5ec39fd6ba6aaf198df13a825dd599bffc\nblock_number      | 12914944\nprotocol          |\npool_address      | 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640\nfrom_address      | 0x7ec0b75a98997c927ace6d87958147a105147ea0\nto_address        | 0x0000fee6275dab194ab538a01dd8b18b02b20000\ntoken_in_address  | 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\ntoken_in_amount   | 283588902010\ntoken_out_address | 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\ntoken_out_amount  | 123848351154563483804\ntrace_address     | {0,0}\nerror             |\n-[ RECORD 2 ]-----+-------------------------------------------------------------------\n...\n")),(0,s.kt)("h3",{id:"query-for-miner-payment"},"Query for miner payment"),(0,s.kt)("p",null,"Lastly, we can see how much was paid to the miner for this transaction by querying by the transaction hash:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"SELECT *\nFROM miner_payments\nWHERE transaction_hash = '0xfcf4558f6432689ea57737fe63124a5ec39fd6ba6aaf198df13a825dd599bffc';\n")),(0,s.kt)("p",null,"You should see results like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"created_at                       | 2021-09-27 15:26:58.245444\nblock_number                     | 12914944\ntransaction_hash                 | 0xfcf4558f6432689ea57737fe63124a5ec39fd6ba6aaf198df13a825dd599bffc\ntransaction_index                | 1\nminer_address                    | 0x5A0b54D5dc17e0AadC383d2db43B0a0D3E029c4c\ncoinbase_transfer                | 48204637147748941824\nbase_fee_per_gas                 | 0\ngas_price                        | 0\ngas_price_with_coinbase_transfer | 200463421638605\ngas_used                         | 240466\ntransaction_to_address           | 0x00000000454a11ca3a574738c0aab442b62d5d45\ntransaction_from_address         | 0xd80276cd0348e9b3c5d017e1f7529f0a785fec3a\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"gas_price")," is the gas price paid directly as gas (it includes the EIP-1559 base fee)"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"coinbase_transfer")," is the amount of ETH paid directly as a transfer to the miner's address"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"gas_price_with_coinbase_transfer")," is the gas price including both original gas and coinbase transfers"),(0,s.kt)("p",null,"So in total, this searcher paid 48.2 ETH to make 53.5 ETH for a net profit of 5.3 ETh"),(0,s.kt)("h3",{id:"next-steps"},"Next steps"),(0,s.kt)("p",null,"To see what other data is available for querying, check out the ",(0,s.kt)("a",{parentName:"p",href:"/flashbots-data/mev-inspect-py/data/classified_traces"},"data")," section"),(0,s.kt)("p",null,"To learn about inspecting blocks in bulk or listening for new blocks as they come in, check out the ",(0,s.kt)("a",{parentName:"p",href:"/flashbots-data/mev-inspect-py/inspecting"},"inspecting")," section"))}f.isMDXComponent=!0}}]);