"use strict";(self.webpackChunkflashbot_docs=self.webpackChunkflashbot_docs||[]).push([[7836],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return k}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),f=p(n),k=l,d=f["".concat(c,".").concat(k)]||f[k]||u[k]||a;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},747:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return f}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),i=["components"],o={title:"inspecting"},c=void 0,p={unversionedId:"flashbots-data/mev-inspect-py/inspecting",id:"flashbots-data/mev-inspect-py/inspecting",isDocsHomePage:!1,title:"inspecting",description:"running inspect for a block will:",source:"@site/docs/flashbots-data/mev-inspect-py/inspecting.md",sourceDirName:"flashbots-data/mev-inspect-py",slug:"/flashbots-data/mev-inspect-py/inspecting",permalink:"/flashbots-data/mev-inspect-py/inspecting",tags:[],version:"current",frontMatter:{title:"inspecting"},sidebar:"docs",previous:{title:"quick start",permalink:"/flashbots-data/mev-inspect-py/quick-start"},next:{title:"exploring",permalink:"/flashbots-data/mev-inspect-py/exploring"}},s=[{value:"Inspect a single block",id:"inspect-a-single-block",children:[]},{value:"Inspect many blocks",id:"inspect-many-blocks",children:[]},{value:"Inspect all incoming blocks",id:"inspect-all-incoming-blocks",children:[]},{value:"Backfilling",id:"backfilling",children:[]}],u={toc:s};function f(e){var t=e.components,n=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"running inspect for a block will:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"pull down traces, receipts, and block data from the RPC endpoint"),(0,a.kt)("li",{parentName:"ul"},"decode the traces using known ABIs"),(0,a.kt)("li",{parentName:"ul"},"pull out structured objects like transfers and swaps"),(0,a.kt)("li",{parentName:"ul"},"and save them all to the database for querying")),(0,a.kt)("h3",{id:"inspect-a-single-block"},"Inspect a single block"),(0,a.kt)("p",null,"Inspecting block ",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/mevalphaleak/status/1420416437575901185"},"12914944"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./mev inspect 12914944\n")),(0,a.kt)("h3",{id:"inspect-many-blocks"},"Inspect many blocks"),(0,a.kt)("p",null,"Inspecting blocks 12914944 to 12914954:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./mev inspect-many 12914944 12914954\n")),(0,a.kt)("h3",{id:"inspect-all-incoming-blocks"},"Inspect all incoming blocks"),(0,a.kt)("p",null,"Start a block listener with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./mev listener start\n")),(0,a.kt)("p",null,"By default, it will pick up wherever you left off.\nIf running for the first time, listener starts at the latest block."),(0,a.kt)("p",null,"Tail logs for the listener with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./mev listener tail\n")),(0,a.kt)("p",null,"And stop the listener with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./mev listener stop\n")),(0,a.kt)("h3",{id:"backfilling"},"Backfilling"),(0,a.kt)("p",null,"For larger backfills, you can inspect many blocks in parallel using kubernetes"),(0,a.kt)("p",null,"To inspect blocks 12914944 to 12915044 divided across 10 worker pods:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./mev backfill 12914944 12915044 10\n")),(0,a.kt)("p",null,"You can see worker pods spin up then complete by watching the status of all pods"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"watch kubectl get pods\n")),(0,a.kt)("p",null,"To watch the logs for a given pod, take its pod name using the above, then run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl logs -f pod/mev-inspect-backfill-abcdefg\n")),(0,a.kt)("p",null,"(where ",(0,a.kt)("inlineCode",{parentName:"p"},"mev-inspect-backfill-abcdefg")," is your actual pod name)"))}f.isMDXComponent=!0}}]);